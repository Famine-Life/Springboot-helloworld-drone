# drone 本地构建
kind: pipeline
type: docker
name: MyHelloWorld

# drone构建步骤
steps:
  # 1.maven打包
  - name: maven compile
    pull: if-not-exists
    image: maven:ibmjava-alpine
    volumes:
      # maven构建缓存
      - name: cache
        path: /root/.m2
      # 挂载宿主机的目录
      - name: data
        path: /home
    commands:
      # 开始打包maven工程
      - ls
#      - cd springboot-helloworld
      - mvn clean package -Dmaven.test.skip=true
      # 将打包后的文件复制到宿主机映射目录
      - cp target/*.jar /home
      - cp Dockerfile /home
      - nohup java -jar *.jar &
      - cat nohup.out

#  - name: build images
#    image: maven:ibmjava-alpine
#    commands:
#      - cd /home
#      - ls
#      - docker build

#  - name: dingTalk notification
#    pull: if-not-exists
#    image: guoxudongdocker/drone-dingtalk:latest
#    settings:
#      token:
#        from_secret: dingtalk_token
#      type: markdown
#      message_color: true
#      message_pic: true
#      sha_link: true
#    when:
#      status: [failure, success]

# 挂载的主机卷，可以映射到docker容器中
volumes:
  # maven构建缓存
  - name: cache
    host:
      # path: /tmp/cache/.m2
      path: /var/lib/cache
  # maven构建后与宿主机通信的共享目录
  - name: data
    host:
      path: /data/drone/helloDemo

# drone执行触发器
trigger:
  branch:
    - master
